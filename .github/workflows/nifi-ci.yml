name: Clone Repository on Pull Request

on:
  pull_request

jobs:
  clone-repo:
    runs-on: [self-hosted, nifi]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true 

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
        
      - name: Prepare User Directory
        run: |
          user_directory="/home/ec2-user/nifi/repositorios"
          repo_name="${{ github.event.repository.name }}"

          # Lista de directorios a eliminar
          delete_directories=()

          # Identifica los directorios de Iniciativa y Subiniciativa de los archivos modificados
          modified_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          for file in $modified_files; do
            if [[ $file =~ ^[^/]+/[^/]+/ ]]; then
              dir_name=$(dirname "$file")
              delete_directories+=("$dir_name")
            fi
          done

          # Elimina los directorios identificados
          for delete_dir in "${delete_directories[@]}"; do
            target_directory="$user_directory/$repo_name/$delete_dir"
            if [ -d "$target_directory" ]; then
              echo "Deleting previous contents of $target_directory"
              rm -rf "$target_directory"
            fi
          done

          # Crea el directorio
          mkdir -p "$user_directory/$repo_name"

      - name: Copia queries y ddl
        run: |
          user_directory="/home/ec2-user/nifi/repositorios"
          repo_name="${{ github.event.repository.name }}"

          modified_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

          for file in $modified_files; do
            if [[ $file =~ ^[^/]+/[^/]+/ ]]; then
              dir_name=$(dirname "$file")
              dest_dir="$user_directory/$repo_name/$dir_name"
              mkdir -p "$dest_dir"
              cp -R "$dir_name" "$dest_dir"
            fi
          done
